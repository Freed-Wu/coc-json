{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "definitions": {
    "configurationEntry": {
      "additionalProperties": true,
      "defaultSnippets": [
        {
          "body": {
            "title": "${1}",
            "properties": {}
          }
        }
      ],
      "properties": {
        "order": {
          "description": "When specified, gives the order of this category of settings relative to other categories.",
          "type": "integer"
        },
        "title": {
          "type": "string",
          "description": "A title for the current category of settings. This label will be rendered in the Settings editor as a subheading. If the title is the same as the extension display name, then the category will be grouped under the main extension heading."
        },
        "properties": {
          "description": "Description of the configuration properties.",
          "type": "object",
          "propertyNames": {
            "pattern": "\\S+",
            "patternErrorMessage": "Property should not be empty."
          },
          "additionalProperties": {
            "anyOf": [
              {
                "title": "Schema of the configuration property.",
                "$ref": "http://json-schema.org/draft-07/schema#"
              },
              {
                "type": "object",
                "properties": {
                  "scope": {
                    "type": "string",
                    "enum": [
                      "application",
                      "machine",
                      "window",
                      "resource",
                      "language-overridable",
                      "machine-overridable"
                    ],
                    "default": "window",
                    "enumDescriptions": [
                      "Configuration that can be configured only in the user settings.",
                      "Configuration that can be configured only in the user settings or only in the remote settings.",
                      "Configuration that can be configured in the user, remote or workspace settings.",
                      "Configuration that can be configured in the user, remote, workspace or folder settings.",
                      "Resource configuration that can be configured in language specific settings.",
                      "Machine configuration that can be configured also in workspace or folder settings."
                    ],
                    "description": "Scope in which the configuration is applicable. Available scopes are `application`, `machine`, `window`, `resource`, and `machine-overridable`."
                  },
                  "enumDescriptions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Descriptions for enum values"
                  },
                  "markdownEnumDescriptions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Descriptions for enum values in the markdown format."
                  },
                  "enumItemLabels": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "markdownDescription": "Labels for enum values to be displayed in the Settings editor. When specified, the {0} values still show after the labels, but less prominently."
                  },
                  "markdownDescription": {
                    "type": "string",
                    "description": "The description in the markdown format."
                  },
                  "deprecationMessage": {
                    "type": "string",
                    "description": "If set, the property is marked as deprecated and the given message is shown as an explanation."
                  },
                  "markdownDeprecationMessage": {
                    "type": "string",
                    "description": "If set, the property is marked as deprecated and the given message is shown as an explanation in the markdown format."
                  },
                  "editPresentation": {
                    "type": "string",
                    "enum": ["singlelineText", "multilineText"],
                    "enumDescriptions": [
                      "The value will be shown in an inputbox.",
                      "The value will be shown in a textarea."
                    ],
                    "description": "When specified, controls the presentation format of the string setting.",
                    "default": "singlelineText"
                  },
                  "order": {
                    "type": "integer",
                    "description": "When specified, gives the order of this setting relative to other settings within the same category. Settings with an order property will be placed before settings without this property set."
                  }
                }
              }
            ]
          }
        }
      }
    }
  },
  "properties": {
    "engines": {
      "type": "object",
      "properties": {
        "coc": {
          "type": "string",
          "defaultSnippets": [
            {
              "body": "^${1:version}"
            },
            {
              "body": ">=${1:version}"
            }
          ]
        }
      }
    },
    "activationEvents": {
      "type": "array",
      "items": {
        "type": "string",
        "defaultSnippets": [
          {
            "body": "onLanguage:${1:language}"
          },
          {
            "body": "onCommand:${1:command}"
          },
          {
            "body": "workspaceContains:${1:filepath}"
          },
          {
            "body": "onFileSystem:${1:scheme}"
          },
          {
            "body": "*"
          }
        ]
      }
    },
    "contributes": {
      "type": "object",
      "description": "Extension contributes definitions, including commands, configuration and jsonValidation.",
      "properties": {
        "rootPatterns": {
          "type": "array",
          "items": {
            "type": "object",
            "defaultSnippets": [
              {
                "body": {
                  "filetype": "${1:filetype}",
                  "patterns": []
                }
              }
            ],
            "properties": {
              "filetype": {
                "type": "string"
              },
              "patterns": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": ["filetype", "patterns"]
          }
        },
        "commands": {
          "type": "array",
          "description": "Contributes extension commands.",
          "items": {
            "type": "object",
            "defaultSnippets": [
              {
                "body": {
                  "title": "${1:Title}",
                  "command": "${2:command}"
                }
              }
            ],
            "properties": {
              "title": {
                "type": "string",
                "description": "Command title."
              },
              "command": {
                "type": "string",
                "description": "Command id."
              }
            }
          }
        },
        "configuration": {
          "type": ["array", "object"],
          "description": "Contributes configuration settings.",
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/configurationEntry"
              }
            },
            {
              "$ref": "#/definitions/configurationEntry"
            }
          ]
        },
        "jsonValidation": {
          "type": "array",
          "description": "Contributes json schema configuration.",
          "items": {
            "type": "object",
            "defaultSnippets": [
              {
                "body": {
                  "fileMatch": "${1:file.json}",
                  "url": "${2:url}"
                }
              }
            ],
            "properties": {
              "fileMatch": {
                "type": ["string", "array"],
                "description": "The file pattern (or an array of patterns) to match, for example 'package.json' or '*.launch'. Exclusion patterns start with '!'",
                "items": {
                  "type": ["string"]
                }
              },
              "url": {
                "description": "A schema URL ('http:', 'https:') or relative path to the extension folder ('./').",
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}
